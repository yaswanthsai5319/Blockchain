{"ast":null,"code":"var _ = require('../utils')._;\n\nfunction formatParse(format) {\n  format = format.split('-');\n  var keyType = 'private';\n  var keyOpt = {\n    type: 'default'\n  };\n\n  for (var i = 1; i < format.length; i++) {\n    if (format[i]) {\n      switch (format[i]) {\n        case 'public':\n          keyType = format[i];\n          break;\n\n        case 'private':\n          keyType = format[i];\n          break;\n\n        case 'pem':\n          keyOpt.type = format[i];\n          break;\n\n        case 'der':\n          keyOpt.type = format[i];\n          break;\n      }\n    }\n  }\n\n  return {\n    scheme: format[0],\n    keyType: keyType,\n    keyOpt: keyOpt\n  };\n}\n\nmodule.exports = {\n  pkcs1: require('./pkcs1'),\n  pkcs8: require('./pkcs8'),\n  components: require('./components'),\n  isPrivateExport: function (format) {\n    return module.exports[format] && typeof module.exports[format].privateExport === 'function';\n  },\n  isPrivateImport: function (format) {\n    return module.exports[format] && typeof module.exports[format].privateImport === 'function';\n  },\n  isPublicExport: function (format) {\n    return module.exports[format] && typeof module.exports[format].publicExport === 'function';\n  },\n  isPublicImport: function (format) {\n    return module.exports[format] && typeof module.exports[format].publicImport === 'function';\n  },\n  detectAndImport: function (key, data, format) {\n    if (format === undefined) {\n      for (var scheme in module.exports) {\n        if (typeof module.exports[scheme].autoImport === 'function' && module.exports[scheme].autoImport(key, data)) {\n          return true;\n        }\n      }\n    } else if (format) {\n      var fmt = formatParse(format);\n\n      if (module.exports[fmt.scheme]) {\n        if (fmt.keyType === 'private') {\n          module.exports[fmt.scheme].privateImport(key, data, fmt.keyOpt);\n        } else {\n          module.exports[fmt.scheme].publicImport(key, data, fmt.keyOpt);\n        }\n      } else {\n        throw Error('Unsupported key format');\n      }\n    }\n\n    return false;\n  },\n  detectAndExport: function (key, format) {\n    if (format) {\n      var fmt = formatParse(format);\n\n      if (module.exports[fmt.scheme]) {\n        if (fmt.keyType === 'private') {\n          if (!key.isPrivate()) {\n            throw Error(\"This is not private key\");\n          }\n\n          return module.exports[fmt.scheme].privateExport(key, fmt.keyOpt);\n        } else {\n          if (!key.isPublic()) {\n            throw Error(\"This is not public key\");\n          }\n\n          return module.exports[fmt.scheme].publicExport(key, fmt.keyOpt);\n        }\n      } else {\n        throw Error('Unsupported key format');\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DAPP-master-dup/DAPP-master/client/node_modules/node-rsa/src/formats/formats.js"],"names":["_","require","formatParse","format","split","keyType","keyOpt","type","i","length","scheme","module","exports","pkcs1","pkcs8","components","isPrivateExport","privateExport","isPrivateImport","privateImport","isPublicExport","publicExport","isPublicImport","publicImport","detectAndImport","key","data","undefined","autoImport","fmt","Error","detectAndExport","isPrivate","isPublic"],"mappings":"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","sourcesContent":["var _ = require('../utils')._;\r\n\r\nfunction formatParse(format) {\r\n    format = format.split('-');\r\n    var keyType = 'private';\r\n    var keyOpt = {type: 'default'};\r\n\r\n    for (var i = 1; i < format.length; i++) {\r\n        if (format[i]) {\r\n            switch (format[i]) {\r\n                case 'public':\r\n                    keyType = format[i];\r\n                    break;\r\n                case 'private':\r\n                    keyType = format[i];\r\n                    break;\r\n                case 'pem':\r\n                    keyOpt.type = format[i];\r\n                    break;\r\n                case 'der':\r\n                    keyOpt.type = format[i];\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {scheme: format[0], keyType: keyType, keyOpt: keyOpt};\r\n}\r\n\r\nmodule.exports = {\r\n    pkcs1: require('./pkcs1'),\r\n    pkcs8: require('./pkcs8'),\r\n    components: require('./components'),\r\n\r\n    isPrivateExport: function (format) {\r\n        return module.exports[format] && typeof module.exports[format].privateExport === 'function';\r\n    },\r\n\r\n    isPrivateImport: function (format) {\r\n        return module.exports[format] && typeof module.exports[format].privateImport === 'function';\r\n    },\r\n\r\n    isPublicExport: function (format) {\r\n        return module.exports[format] && typeof module.exports[format].publicExport === 'function';\r\n    },\r\n\r\n    isPublicImport: function (format) {\r\n        return module.exports[format] && typeof module.exports[format].publicImport === 'function';\r\n    },\r\n\r\n    detectAndImport: function (key, data, format) {\r\n        if (format === undefined) {\r\n            for (var scheme in module.exports) {\r\n                if (typeof module.exports[scheme].autoImport === 'function' && module.exports[scheme].autoImport(key, data)) {\r\n                    return true;\r\n                }\r\n            }\r\n        } else if (format) {\r\n            var fmt = formatParse(format);\r\n\r\n            if (module.exports[fmt.scheme]) {\r\n                if (fmt.keyType === 'private') {\r\n                    module.exports[fmt.scheme].privateImport(key, data, fmt.keyOpt);\r\n                } else {\r\n                    module.exports[fmt.scheme].publicImport(key, data, fmt.keyOpt);\r\n                }\r\n            } else {\r\n                throw Error('Unsupported key format');\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    detectAndExport: function (key, format) {\r\n        if (format) {\r\n            var fmt = formatParse(format);\r\n\r\n            if (module.exports[fmt.scheme]) {\r\n                if (fmt.keyType === 'private') {\r\n                    if (!key.isPrivate()) {\r\n                        throw Error(\"This is not private key\");\r\n                    }\r\n                    return module.exports[fmt.scheme].privateExport(key, fmt.keyOpt);\r\n                } else {\r\n                    if (!key.isPublic()) {\r\n                        throw Error(\"This is not public key\");\r\n                    }\r\n                    return module.exports[fmt.scheme].publicExport(key, fmt.keyOpt);\r\n                }\r\n            } else {\r\n                throw Error('Unsupported key format');\r\n            }\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"script"}