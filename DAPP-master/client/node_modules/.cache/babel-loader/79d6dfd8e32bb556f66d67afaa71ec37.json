{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst {\n  findSources\n} = require('./utils');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async (...args) => {\n    const {\n      sources,\n      options\n    } = findSources(args);\n    const res = await api.post('files/cp', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources.map(src => CID.isCID(src) ? `/ipfs/${src}` : src),\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/files/cp.js"],"names":["CID","require","findSources","configure","toUrlSearchParams","module","exports","api","args","sources","options","res","post","timeout","signal","searchParams","arg","map","src","isCID","headers","text"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAkBD,OAAO,CAAC,SAAD,CAA/B;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;;AAEAI,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC,SAAO,OAAO,GAAGC,IAAV,KAAmB;AACxB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuBR,WAAW,CAACM,IAAD,CAAxC;AAEA,UAAMG,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,UAAT,EAAqB;AACrCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADoB;AAErCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFqB;AAGrCC,MAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,QAAAA,GAAG,EAAEP,OAAO,CAACQ,GAAR,CAAYC,GAAG,IAAIlB,GAAG,CAACmB,KAAJ,CAAUD,GAAV,IAAkB,SAAQA,GAAI,EAA9B,GAAkCA,GAArD,CADyB;AAE9B,WAAGR;AAF2B,OAAD,CAHM;AAOrCU,MAAAA,OAAO,EAAEV,OAAO,CAACU;AAPoB,KAArB,CAAlB;AAUA,UAAMT,GAAG,CAACU,IAAJ,EAAN;AACD,GAdD;AAeD,CAhByB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst { findSources } = require('./utils')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (...args) => {\n    const { sources, options } = findSources(args)\n\n    const res = await api.post('files/cp', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources.map(src => CID.isCID(src) ? `/ipfs/${src}` : src),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n})\n"]},"metadata":{},"sourceType":"script"}