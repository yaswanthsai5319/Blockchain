{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nconst multipartRequest = require('../lib/multipart-request');\n\nconst anySignal = require('any-signal');\n\nconst AbortController = require('abort-controller');\n\nmodule.exports = configure(api => {\n  return async (topic, data, options = {}) => {\n    const searchParams = toUrlSearchParams({\n      arg: topic,\n      ...options\n    }); // allow aborting requests on body errors\n\n    const controller = new AbortController();\n    const signal = anySignal([controller.signal, options.signal]);\n    const res = await api.post('pubsub/pub', {\n      timeout: options.timeout,\n      signal,\n      searchParams,\n      ...(await multipartRequest(data, controller, options.headers))\n    });\n    await res.text();\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/pubsub/publish.js"],"names":["configure","require","toUrlSearchParams","multipartRequest","anySignal","AbortController","module","exports","api","topic","data","options","searchParams","arg","controller","signal","res","post","timeout","headers","text"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMG,SAAS,GAAGH,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMI,eAAe,GAAGJ,OAAO,CAAC,kBAAD,CAA/B;;AAEAK,MAAM,CAACC,OAAP,GAAiBP,SAAS,CAACQ,GAAG,IAAI;AAChC,SAAO,OAAOC,KAAP,EAAcC,IAAd,EAAoBC,OAAO,GAAG,EAA9B,KAAqC;AAC1C,UAAMC,YAAY,GAAGV,iBAAiB,CAAC;AACrCW,MAAAA,GAAG,EAAEJ,KADgC;AAErC,SAAGE;AAFkC,KAAD,CAAtC,CAD0C,CAM1C;;AACA,UAAMG,UAAU,GAAG,IAAIT,eAAJ,EAAnB;AACA,UAAMU,MAAM,GAAGX,SAAS,CAAC,CAACU,UAAU,CAACC,MAAZ,EAAoBJ,OAAO,CAACI,MAA5B,CAAD,CAAxB;AAEA,UAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAJ,CAAS,YAAT,EAAuB;AACvCC,MAAAA,OAAO,EAAEP,OAAO,CAACO,OADsB;AAEvCH,MAAAA,MAFuC;AAGvCH,MAAAA,YAHuC;AAIvC,UACE,MAAMT,gBAAgB,CAACO,IAAD,EAAOI,UAAP,EAAmBH,OAAO,CAACQ,OAA3B,CADxB;AAJuC,KAAvB,CAAlB;AASA,UAAMH,GAAG,CAACI,IAAJ,EAAN;AACD,GApBD;AAqBD,CAtByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst multipartRequest = require('../lib/multipart-request')\nconst anySignal = require('any-signal')\nconst AbortController = require('abort-controller')\n\nmodule.exports = configure(api => {\n  return async (topic, data, options = {}) => {\n    const searchParams = toUrlSearchParams({\n      arg: topic,\n      ...options\n    })\n\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = anySignal([controller.signal, options.signal])\n\n    const res = await api.post('pubsub/pub', {\n      timeout: options.timeout,\n      signal,\n      searchParams,\n      ...(\n        await multipartRequest(data, controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n})\n"]},"metadata":{},"sourceType":"script"}