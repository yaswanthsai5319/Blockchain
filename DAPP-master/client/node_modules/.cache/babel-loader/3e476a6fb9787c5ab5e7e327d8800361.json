{"ast":null,"code":"'use strict';\n\nconst modeToString = require('./mode-to-string');\n\nconst mtimeToObject = require('./mtime-to-object');\n\nmodule.exports = ({\n  arg,\n  searchParams,\n  hashAlg,\n  mtime,\n  mode,\n  ...options\n} = {}) => {\n  if (searchParams) {\n    options = { ...options,\n      ...searchParams\n    };\n  }\n\n  if (hashAlg) {\n    options.hash = hashAlg;\n  }\n\n  if (mtime != null) {\n    mtime = mtimeToObject(mtime);\n    options.mtime = mtime.secs;\n    options.mtimeNsecs = mtime.nsecs;\n  }\n\n  if (mode != null) {\n    options.mode = modeToString(mode);\n  }\n\n  if (options.timeout && !isNaN(options.timeout)) {\n    // server API expects timeouts as strings\n    options.timeout = `${options.timeout}ms`;\n  }\n\n  if (arg === undefined || arg === null) {\n    arg = [];\n  } else if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n\n  const urlSearchParams = new URLSearchParams(options);\n  arg.forEach(arg => urlSearchParams.append('arg', arg));\n  return urlSearchParams;\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/lib/to-url-search-params.js"],"names":["modeToString","require","mtimeToObject","module","exports","arg","searchParams","hashAlg","mtime","mode","options","hash","secs","mtimeNsecs","nsecs","timeout","isNaN","undefined","Array","isArray","urlSearchParams","URLSearchParams","forEach","append"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,mBAAD,CAA7B;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,YAAP;AAAqBC,EAAAA,OAArB;AAA8BC,EAAAA,KAA9B;AAAqCC,EAAAA,IAArC;AAA2C,KAAGC;AAA9C,IAA0D,EAA3D,KAAkE;AACjF,MAAIJ,YAAJ,EAAkB;AAChBI,IAAAA,OAAO,GAAG,EACR,GAAGA,OADK;AAER,SAAGJ;AAFK,KAAV;AAID;;AAED,MAAIC,OAAJ,EAAa;AACXG,IAAAA,OAAO,CAACC,IAAR,GAAeJ,OAAf;AACD;;AAED,MAAIC,KAAK,IAAI,IAAb,EAAmB;AACjBA,IAAAA,KAAK,GAAGN,aAAa,CAACM,KAAD,CAArB;AAEAE,IAAAA,OAAO,CAACF,KAAR,GAAgBA,KAAK,CAACI,IAAtB;AACAF,IAAAA,OAAO,CAACG,UAAR,GAAqBL,KAAK,CAACM,KAA3B;AACD;;AAED,MAAIL,IAAI,IAAI,IAAZ,EAAkB;AAChBC,IAAAA,OAAO,CAACD,IAAR,GAAeT,YAAY,CAACS,IAAD,CAA3B;AACD;;AAED,MAAIC,OAAO,CAACK,OAAR,IAAmB,CAACC,KAAK,CAACN,OAAO,CAACK,OAAT,CAA7B,EAAgD;AAC9C;AACAL,IAAAA,OAAO,CAACK,OAAR,GAAmB,GAAEL,OAAO,CAACK,OAAQ,IAArC;AACD;;AAED,MAAIV,GAAG,KAAKY,SAAR,IAAqBZ,GAAG,KAAK,IAAjC,EAAuC;AACrCA,IAAAA,GAAG,GAAG,EAAN;AACD,GAFD,MAEO,IAAI,CAACa,KAAK,CAACC,OAAN,CAAcd,GAAd,CAAL,EAAyB;AAC9BA,IAAAA,GAAG,GAAG,CAACA,GAAD,CAAN;AACD;;AAED,QAAMe,eAAe,GAAG,IAAIC,eAAJ,CAAoBX,OAApB,CAAxB;AAEAL,EAAAA,GAAG,CAACiB,OAAJ,CAAYjB,GAAG,IAAIe,eAAe,CAACG,MAAhB,CAAuB,KAAvB,EAA8BlB,GAA9B,CAAnB;AAEA,SAAOe,eAAP;AACD,CAvCD","sourcesContent":["'use strict'\n\nconst modeToString = require('./mode-to-string')\nconst mtimeToObject = require('./mtime-to-object')\n\nmodule.exports = ({ arg, searchParams, hashAlg, mtime, mode, ...options } = {}) => {\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    }\n  }\n\n  if (hashAlg) {\n    options.hash = hashAlg\n  }\n\n  if (mtime != null) {\n    mtime = mtimeToObject(mtime)\n\n    options.mtime = mtime.secs\n    options.mtimeNsecs = mtime.nsecs\n  }\n\n  if (mode != null) {\n    options.mode = modeToString(mode)\n  }\n\n  if (options.timeout && !isNaN(options.timeout)) {\n    // server API expects timeouts as strings\n    options.timeout = `${options.timeout}ms`\n  }\n\n  if (arg === undefined || arg === null) {\n    arg = []\n  } else if (!Array.isArray(arg)) {\n    arg = [arg]\n  }\n\n  const urlSearchParams = new URLSearchParams(options)\n\n  arg.forEach(arg => urlSearchParams.append('arg', arg))\n\n  return urlSearchParams\n}\n"]},"metadata":{},"sourceType":"script"}