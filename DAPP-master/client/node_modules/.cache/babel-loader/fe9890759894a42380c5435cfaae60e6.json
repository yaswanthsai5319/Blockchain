{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\n\nconst {\n  findSources\n} = require('./utils');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async (...args) => {\n    const {\n      sources,\n      options\n    } = findSources(args);\n    const res = await api.post('files/rm', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources,\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/files/rm.js"],"names":["configure","require","findSources","toUrlSearchParams","module","exports","api","args","sources","options","res","post","timeout","signal","searchParams","arg","headers","text"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAkBD,OAAO,CAAC,SAAD,CAA/B;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBL,SAAS,CAACM,GAAG,IAAI;AAChC,SAAO,OAAO,GAAGC,IAAV,KAAmB;AACxB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuBP,WAAW,CAACK,IAAD,CAAxC;AAEA,UAAMG,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,UAAT,EAAqB;AACrCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADoB;AAErCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFqB;AAGrCC,MAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,QAAAA,GAAG,EAAEP,OADyB;AAE9B,WAAGC;AAF2B,OAAD,CAHM;AAOrCO,MAAAA,OAAO,EAAEP,OAAO,CAACO;AAPoB,KAArB,CAAlB;AAUA,UAAMN,GAAG,CAACO,IAAJ,EAAN;AACD,GAdD;AAeD,CAhByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst { findSources } = require('./utils')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (...args) => {\n    const { sources, options } = findSources(args)\n\n    const res = await api.post('files/rm', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n})\n"]},"metadata":{},"sourceType":"script"}