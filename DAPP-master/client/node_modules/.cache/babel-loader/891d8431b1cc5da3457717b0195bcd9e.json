{"ast":null,"code":"'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\n\nconst multipartRequest = require('../lib/multipart-request');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nconst anySignal = require('any-signal');\n\nconst AbortController = require('abort-controller');\n\nmodule.exports = configure(api => {\n  return async (config, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController();\n    const signal = anySignal([controller.signal, options.signal]);\n    const res = await api.post('config/replace', {\n      timeout: options.timeout,\n      signal,\n      searchParams: toUrlSearchParams(options),\n      ...(await multipartRequest(Buffer.from(JSON.stringify(config)), controller, options.headers))\n    });\n    return res.text();\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/config/replace.js"],"names":["Buffer","require","multipartRequest","configure","toUrlSearchParams","anySignal","AbortController","module","exports","api","config","options","controller","signal","res","post","timeout","searchParams","from","JSON","stringify","headers","text"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;;AACA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMK,eAAe,GAAGL,OAAO,CAAC,kBAAD,CAA/B;;AAEAM,MAAM,CAACC,OAAP,GAAiBL,SAAS,CAACM,GAAG,IAAI;AAChC,SAAO,OAAOC,MAAP,EAAeC,OAAO,GAAG,EAAzB,KAAgC;AACrC;AACA,UAAMC,UAAU,GAAG,IAAIN,eAAJ,EAAnB;AACA,UAAMO,MAAM,GAAGR,SAAS,CAAC,CAACO,UAAU,CAACC,MAAZ,EAAoBF,OAAO,CAACE,MAA5B,CAAD,CAAxB;AAEA,UAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,gBAAT,EAA2B;AAC3CC,MAAAA,OAAO,EAAEL,OAAO,CAACK,OAD0B;AAE3CH,MAAAA,MAF2C;AAG3CI,MAAAA,YAAY,EAAEb,iBAAiB,CAACO,OAAD,CAHY;AAI3C,UACE,MAAMT,gBAAgB,CAACF,MAAM,CAACkB,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeV,MAAf,CAAZ,CAAD,EAAsCE,UAAtC,EAAkDD,OAAO,CAACU,OAA1D,CADxB;AAJ2C,KAA3B,CAAlB;AASA,WAAOP,GAAG,CAACQ,IAAJ,EAAP;AACD,GAfD;AAgBD,CAjByB,CAA1B","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst multipartRequest = require('../lib/multipart-request')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst anySignal = require('any-signal')\nconst AbortController = require('abort-controller')\n\nmodule.exports = configure(api => {\n  return async (config, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = anySignal([controller.signal, options.signal])\n\n    const res = await api.post('config/replace', {\n      timeout: options.timeout,\n      signal,\n      searchParams: toUrlSearchParams(options),\n      ...(\n        await multipartRequest(Buffer.from(JSON.stringify(config)), controller, options.headers)\n      )\n    })\n\n    return res.text()\n  }\n})\n"]},"metadata":{},"sourceType":"script"}