{"ast":null,"code":"'use strict';\n\nconst {\n  BigNumber\n} = require('bignumber.js');\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async (options = {}) => {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      timeout: options.timeout,\n      signal: options.signal,\n      headers: options.headers\n    });\n    return toCoreInterface(await res.json());\n  };\n});\n\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(k => new CID(k['/'])),\n    peers: res.Peers || [],\n    blocksReceived: new BigNumber(res.BlocksReceived),\n    dataReceived: new BigNumber(res.DataReceived),\n    blocksSent: new BigNumber(res.BlocksSent),\n    dataSent: new BigNumber(res.DataSent),\n    dupBlksReceived: new BigNumber(res.DupBlksReceived),\n    dupDataReceived: new BigNumber(res.DupDataReceived)\n  };\n}","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/bitswap/stat.js"],"names":["BigNumber","require","CID","configure","toUrlSearchParams","module","exports","api","options","res","post","searchParams","timeout","signal","headers","toCoreInterface","json","provideBufLen","ProvideBufLen","wantlist","Wantlist","map","k","peers","Peers","blocksReceived","BlocksReceived","dataReceived","DataReceived","blocksSent","BlocksSent","dataSent","DataSent","dupBlksReceived","DupBlksReceived","dupDataReceived","DupDataReceived"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,cAAD,CAA7B;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;;AAEAI,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC,SAAO,OAAOC,OAAO,GAAG,EAAjB,KAAwB;AAC7B,UAAMC,GAAG,GAAG,MAAMF,GAAG,CAACG,IAAJ,CAAS,cAAT,EAAyB;AACzCC,MAAAA,YAAY,EAAEP,iBAAiB,CAACI,OAAD,CADU;AAEzCI,MAAAA,OAAO,EAAEJ,OAAO,CAACI,OAFwB;AAGzCC,MAAAA,MAAM,EAAEL,OAAO,CAACK,MAHyB;AAIzCC,MAAAA,OAAO,EAAEN,OAAO,CAACM;AAJwB,KAAzB,CAAlB;AAOA,WAAOC,eAAe,CAAC,MAAMN,GAAG,CAACO,IAAJ,EAAP,CAAtB;AACD,GATD;AAUD,CAXyB,CAA1B;;AAaA,SAASD,eAAT,CAA0BN,GAA1B,EAA+B;AAC7B,SAAO;AACLQ,IAAAA,aAAa,EAAER,GAAG,CAACS,aADd;AAELC,IAAAA,QAAQ,EAAE,CAACV,GAAG,CAACW,QAAJ,IAAgB,EAAjB,EAAqBC,GAArB,CAAyBC,CAAC,IAAI,IAAIpB,GAAJ,CAAQoB,CAAC,CAAC,GAAD,CAAT,CAA9B,CAFL;AAGLC,IAAAA,KAAK,EAAGd,GAAG,CAACe,KAAJ,IAAa,EAHhB;AAILC,IAAAA,cAAc,EAAE,IAAIzB,SAAJ,CAAcS,GAAG,CAACiB,cAAlB,CAJX;AAKLC,IAAAA,YAAY,EAAE,IAAI3B,SAAJ,CAAcS,GAAG,CAACmB,YAAlB,CALT;AAMLC,IAAAA,UAAU,EAAE,IAAI7B,SAAJ,CAAcS,GAAG,CAACqB,UAAlB,CANP;AAOLC,IAAAA,QAAQ,EAAE,IAAI/B,SAAJ,CAAcS,GAAG,CAACuB,QAAlB,CAPL;AAQLC,IAAAA,eAAe,EAAE,IAAIjC,SAAJ,CAAcS,GAAG,CAACyB,eAAlB,CARZ;AASLC,IAAAA,eAAe,EAAE,IAAInC,SAAJ,CAAcS,GAAG,CAAC2B,eAAlB;AATZ,GAAP;AAWD","sourcesContent":["'use strict'\n\nconst { BigNumber } = require('bignumber.js')\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (options = {}) => {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      timeout: options.timeout,\n      signal: options.signal,\n      headers: options.headers\n    })\n\n    return toCoreInterface(await res.json())\n  }\n})\n\nfunction toCoreInterface (res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(k => new CID(k['/'])),\n    peers: (res.Peers || []),\n    blocksReceived: new BigNumber(res.BlocksReceived),\n    dataReceived: new BigNumber(res.DataReceived),\n    blocksSent: new BigNumber(res.BlocksSent),\n    dataSent: new BigNumber(res.DataSent),\n    dupBlksReceived: new BigNumber(res.DupBlksReceived),\n    dupDataReceived: new BigNumber(res.DupDataReceived)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}