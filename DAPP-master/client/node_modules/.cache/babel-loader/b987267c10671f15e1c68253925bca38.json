{"ast":null,"code":"'use strict';\n\nconst toCamel = require('../lib/object-to-camel');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async (name, options = {}) => {\n    const res = await api.post('key/rm', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return toCamel(data.Keys[0]);\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/key/rm.js"],"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","name","options","res","post","timeout","signal","searchParams","arg","headers","data","json","Keys"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,wBAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC,SAAO,OAAOC,IAAP,EAAaC,OAAO,GAAG,EAAvB,KAA8B;AACnC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,QAAT,EAAmB;AACnCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADkB;AAEnCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFmB;AAGnCC,MAAAA,YAAY,EAAEV,iBAAiB,CAAC;AAC9BW,QAAAA,GAAG,EAAEP,IADyB;AAE9B,WAAGC;AAF2B,OAAD,CAHI;AAOnCO,MAAAA,OAAO,EAAEP,OAAO,CAACO;AAPkB,KAAnB,CAAlB;AASA,UAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AAEA,WAAOjB,OAAO,CAACgB,IAAI,CAACE,IAAL,CAAU,CAAV,CAAD,CAAd;AACD,GAbD;AAcD,CAfyB,CAA1B","sourcesContent":["'use strict'\n\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (name, options = {}) => {\n    const res = await api.post('key/rm', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return toCamel(data.Keys[0])\n  }\n})\n"]},"metadata":{},"sourceType":"script"}