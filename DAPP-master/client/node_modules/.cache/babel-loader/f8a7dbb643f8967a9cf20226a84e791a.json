{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async function* gc(options = {}) {\n    const res = await api.post('repo/gc', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: res => {\n        return {\n          err: res.Error ? new Error(res.Error) : null,\n          cid: (res.Key || {})['/'] ? new CID(res.Key['/']) : null\n        };\n      }\n    });\n    yield* res.ndjson();\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/repo/gc.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","gc","options","res","post","timeout","signal","searchParams","headers","transform","err","Error","cid","Key","ndjson"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC,SAAO,gBAAiBC,EAAjB,CAAqBC,OAAO,GAAG,EAA/B,EAAmC;AACxC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,SAAT,EAAoB;AACpCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADmB;AAEpCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFoB;AAGpCC,MAAAA,YAAY,EAAEV,iBAAiB,CAACK,OAAD,CAHK;AAIpCM,MAAAA,OAAO,EAAEN,OAAO,CAACM,OAJmB;AAKpCC,MAAAA,SAAS,EAAGN,GAAD,IAAS;AAClB,eAAO;AACLO,UAAAA,GAAG,EAAEP,GAAG,CAACQ,KAAJ,GAAY,IAAIA,KAAJ,CAAUR,GAAG,CAACQ,KAAd,CAAZ,GAAmC,IADnC;AAELC,UAAAA,GAAG,EAAE,CAACT,GAAG,CAACU,GAAJ,IAAW,EAAZ,EAAgB,GAAhB,IAAuB,IAAInB,GAAJ,CAAQS,GAAG,CAACU,GAAJ,CAAQ,GAAR,CAAR,CAAvB,GAA+C;AAF/C,SAAP;AAID;AAVmC,KAApB,CAAlB;AAaA,WAAQV,GAAG,CAACW,MAAJ,EAAR;AACD,GAfD;AAgBD,CAjByB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async function * gc (options = {}) {\n    const res = await api.post('repo/gc', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (res) => {\n        return {\n          err: res.Error ? new Error(res.Error) : null,\n          cid: (res.Key || {})['/'] ? new CID(res.Key['/']) : null\n        }\n      }\n    })\n\n    yield * res.ndjson()\n  }\n})\n"]},"metadata":{},"sourceType":"script"}