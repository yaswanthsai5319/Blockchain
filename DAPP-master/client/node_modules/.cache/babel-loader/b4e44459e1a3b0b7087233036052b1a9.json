{"ast":null,"code":"// const ipfsClient = require('ipfs-http-client');\n// const Ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n// export default Ipfs;\nconst ipfsClient = require('ipfs-http-client');\n\nconst projectId = '2MNZoM60sXgIIX7zyUaIIFKDqMq'; // <---------- your Infura Project ID\n\nconst projectSecret = '78d41aa14b5e1c4f0a7fbc42970f2699'; // <---------- your Infura Secret\n// (for security concerns, consider saving these values in .env files)\n\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\nconst Ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https',\n  headers: {\n    authorization: auth\n  }\n});\nexport default Ipfs;","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/DAPP-master-dup/DAPP-master/client/src/components/Ipfs.js"],"names":["ipfsClient","require","projectId","projectSecret","auth","Buffer","from","toString","Ipfs","host","port","protocol","headers","authorization"],"mappings":"AAAA;AAEA;AAEA;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AAEA,MAAMC,SAAS,GAAG,6BAAlB,C,CAAmD;;AAEnD,MAAMC,aAAa,GAAG,kCAAtB,C,CAA2D;AAC3D;;AAEA,MAAMC,IAAI,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYJ,SAAS,GAAG,GAAZ,GAAkBC,aAA9B,EAA6CI,QAA7C,CAAsD,QAAtD,CAAxB;AAEA,MAAMC,IAAI,GAAGR,UAAU,CAAC;AACpBS,EAAAA,IAAI,EAAE,gBADc;AAEpBC,EAAAA,IAAI,EAAE,IAFc;AAGpBC,EAAAA,QAAQ,EAAE,OAHU;AAIpBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aAAa,EAAET;AADV;AAJW,CAAD,CAAvB;AASA,eAAeI,IAAf","sourcesContent":["// const ipfsClient = require('ipfs-http-client');\n\n// const Ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\n// export default Ipfs;\n\nconst ipfsClient = require('ipfs-http-client');\n\nconst projectId = '2MNZoM60sXgIIX7zyUaIIFKDqMq';   // <---------- your Infura Project ID\n\nconst projectSecret = '78d41aa14b5e1c4f0a7fbc42970f2699';  // <---------- your Infura Secret\n// (for security concerns, consider saving these values in .env files)\n\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\n\nconst Ipfs = ipfsClient({\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https',\n    headers: {\n        authorization: auth,\n},\n});\n\nexport default Ipfs;\n"]},"metadata":{},"sourceType":"module"}