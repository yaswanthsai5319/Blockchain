{"ast":null,"code":"'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nconst {\n  Value\n} = require('./response-types');\n\nmodule.exports = configure(api => {\n  return async function get(key, options = {}) {\n    const res = await api.post('dht/get', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: Buffer.isBuffer(key) ? key.toString() : key,\n        ...options\n      }),\n      headers: options.headers\n    });\n\n    for await (const message of res.ndjson()) {\n      if (message.Type === Value) {\n        return Buffer.from(message.Extra, 'base64');\n      }\n    }\n\n    throw new Error('not found');\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/dht/get.js"],"names":["Buffer","require","configure","toUrlSearchParams","Value","module","exports","api","get","key","options","res","post","timeout","signal","searchParams","arg","isBuffer","toString","headers","message","ndjson","Type","from","Extra","Error"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAYH,OAAO,CAAC,kBAAD,CAAzB;;AAEAI,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC,SAAO,eAAeC,GAAf,CAAoBC,GAApB,EAAyBC,OAAO,GAAG,EAAnC,EAAuC;AAC5C,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,SAAT,EAAoB;AACpCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADmB;AAEpCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFoB;AAGpCC,MAAAA,YAAY,EAAEZ,iBAAiB,CAAC;AAC9Ba,QAAAA,GAAG,EAAEhB,MAAM,CAACiB,QAAP,CAAgBR,GAAhB,IAAuBA,GAAG,CAACS,QAAJ,EAAvB,GAAwCT,GADf;AAE9B,WAAGC;AAF2B,OAAD,CAHK;AAOpCS,MAAAA,OAAO,EAAET,OAAO,CAACS;AAPmB,KAApB,CAAlB;;AAUA,eAAW,MAAMC,OAAjB,IAA4BT,GAAG,CAACU,MAAJ,EAA5B,EAA0C;AACxC,UAAID,OAAO,CAACE,IAAR,KAAiBlB,KAArB,EAA4B;AAC1B,eAAOJ,MAAM,CAACuB,IAAP,CAAYH,OAAO,CAACI,KAApB,EAA2B,QAA3B,CAAP;AACD;AACF;;AAED,UAAM,IAAIC,KAAJ,CAAU,WAAV,CAAN;AACD,GAlBD;AAmBD,CApByB,CAA1B","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst { Value } = require('./response-types')\n\nmodule.exports = configure(api => {\n  return async function get (key, options = {}) {\n    const res = await api.post('dht/get', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: Buffer.isBuffer(key) ? key.toString() : key,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const message of res.ndjson()) {\n      if (message.Type === Value) {\n        return Buffer.from(message.Extra, 'base64')\n      }\n    }\n\n    throw new Error('not found')\n  }\n})\n"]},"metadata":{},"sourceType":"script"}