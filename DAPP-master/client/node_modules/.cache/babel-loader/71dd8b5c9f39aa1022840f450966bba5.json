{"ast":null,"code":"'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\n\nconst toIterable = require('stream-to-it/source');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async function* read(path, options = {}) {\n    const res = await api.post('files/read', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.count || options.length,\n        ...options\n      }),\n      headers: options.headers\n    });\n\n    for await (const chunk of toIterable(res.body)) {\n      yield Buffer.from(chunk);\n    }\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/files/read.js"],"names":["Buffer","require","toIterable","configure","toUrlSearchParams","module","exports","api","read","path","options","res","post","timeout","signal","searchParams","arg","count","length","headers","chunk","body","from"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,qBAAD,CAA1B;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;;AAEAI,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC,SAAO,gBAAiBC,IAAjB,CAAuBC,IAAvB,EAA6BC,OAAO,GAAG,EAAvC,EAA2C;AAChD,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,YAAT,EAAuB;AACvCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADsB;AAEvCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFuB;AAGvCC,MAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,QAAAA,GAAG,EAAEP,IADyB;AAE9BQ,QAAAA,KAAK,EAAEP,OAAO,CAACO,KAAR,IAAiBP,OAAO,CAACQ,MAFF;AAG9B,WAAGR;AAH2B,OAAD,CAHQ;AAQvCS,MAAAA,OAAO,EAAET,OAAO,CAACS;AARsB,KAAvB,CAAlB;;AAWA,eAAW,MAAMC,KAAjB,IAA0BlB,UAAU,CAACS,GAAG,CAACU,IAAL,CAApC,EAAgD;AAC9C,YAAMrB,MAAM,CAACsB,IAAP,CAAYF,KAAZ,CAAN;AACD;AACF,GAfD;AAgBD,CAjByB,CAA1B","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst toIterable = require('stream-to-it/source')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async function * read (path, options = {}) {\n    const res = await api.post('files/read', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.count || options.length,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const chunk of toIterable(res.body)) {\n      yield Buffer.from(chunk)\n    }\n  }\n})\n"]},"metadata":{},"sourceType":"script"}