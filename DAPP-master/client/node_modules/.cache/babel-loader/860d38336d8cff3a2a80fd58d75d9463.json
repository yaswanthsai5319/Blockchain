{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async (path, options = {}) => {\n    if (typeof path !== 'string') {\n      options = path || {};\n      path = '/';\n    }\n\n    const res = await api.post('files/flush', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return new CID(data.Cid);\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/files/flush.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","path","options","res","post","timeout","signal","searchParams","arg","headers","data","json","Cid"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC,SAAO,OAAOC,IAAP,EAAaC,OAAO,GAAG,EAAvB,KAA8B;AACnC,QAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5BC,MAAAA,OAAO,GAAGD,IAAI,IAAI,EAAlB;AACAA,MAAAA,IAAI,GAAG,GAAP;AACD;;AAED,UAAME,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,aAAT,EAAwB;AACxCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADuB;AAExCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFwB;AAGxCC,MAAAA,YAAY,EAAEV,iBAAiB,CAAC;AAC9BW,QAAAA,GAAG,EAAEP,IADyB;AAE9B,WAAGC;AAF2B,OAAD,CAHS;AAOxCO,MAAAA,OAAO,EAAEP,OAAO,CAACO;AAPuB,KAAxB,CAAlB;AASA,UAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AAEA,WAAO,IAAIjB,GAAJ,CAAQgB,IAAI,CAACE,GAAb,CAAP;AACD,GAlBD;AAmBD,CApByB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (path, options = {}) => {\n    if (typeof path !== 'string') {\n      options = path || {}\n      path = '/'\n    }\n\n    const res = await api.post('files/flush', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return new CID(data.Cid)\n  }\n})\n"]},"metadata":{},"sourceType":"script"}