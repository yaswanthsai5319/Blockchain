{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async (cid, options = {}) => {\n    const res = await api.post('bitswap/unwant', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: typeof cid === 'string' ? cid : new CID(cid).toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    return res.json();\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/bitswap/unwant.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","cid","options","res","post","timeout","signal","searchParams","arg","toString","headers","json"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC,SAAO,OAAOC,GAAP,EAAYC,OAAO,GAAG,EAAtB,KAA6B;AAClC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,gBAAT,EAA2B;AAC3CC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OAD0B;AAE3CC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAF2B;AAG3CC,MAAAA,YAAY,EAAEV,iBAAiB,CAAC;AAC9BW,QAAAA,GAAG,EAAE,OAAOP,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgC,IAAIP,GAAJ,CAAQO,GAAR,EAAaQ,QAAb,EADP;AAE9B,WAAGP;AAF2B,OAAD,CAHY;AAO3CQ,MAAAA,OAAO,EAAER,OAAO,CAACQ;AAP0B,KAA3B,CAAlB;AAUA,WAAOP,GAAG,CAACQ,IAAJ,EAAP;AACD,GAZD;AAaD,CAdyB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (cid, options = {}) => {\n    const res = await api.post('bitswap/unwant', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: typeof cid === 'string' ? cid : new CID(cid).toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n})\n"]},"metadata":{},"sourceType":"script"}