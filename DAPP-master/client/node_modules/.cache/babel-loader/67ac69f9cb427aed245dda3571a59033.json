{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\DAPP-master-dup\\\\DAPP-master\\\\client\\\\src\\\\components\\\\AddDocument.js\";\nimport React, { useState, useContext } from 'react';\nimport Ipfs from './Ipfs';\nimport NodeRSA from 'node-rsa';\nimport Context from '../store/Context';\n\nconst AddDocument = () => {\n  const {\n    state,\n    dispatch\n  } = useContext(Context);\n  const [buffer, setBuffer] = useState();\n  const [publicKey, setPublicKey] = useState();\n\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => {\n      setBuffer(Buffer(reader.result));\n    };\n  };\n\n  const handleKeyChange = e => {\n    setPublicKey(e.target.value);\n  };\n\n  const handleClick = () => {\n    sessionStorage.clear();\n    navigate('/');\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const key = new NodeRSA(publicKey);\n      const encrypt = key.encrypt(buffer);\n\n      for await (const result of Ipfs.add(encrypt)) {\n        await state.contract.methods.set(result.path).send({\n          from: state.accounts[0]\n        });\n        dispatch({\n          type: 'SET_PATH',\n          payload: result.path\n        });\n        dispatch({\n          type: 'SET_NOTIF',\n          payload: {\n            msg: result.path,\n            success: true\n          }\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: 'SET_NOTIF',\n        payload: {\n          msg: error.message,\n          success: false\n        }\n      });\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"ADD\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"File\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"u-full-width\",\n    type: \"file\",\n    onChange: handleFileChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Public Key\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"u-full-width\",\n    type: \"text\",\n    onChange: handleKeyChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"u-full-width button-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"submit\")));\n};\n\nexport default AddDocument;","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/DAPP-master-dup/DAPP-master/client/src/components/AddDocument.js"],"names":["React","useState","useContext","Ipfs","NodeRSA","Context","AddDocument","state","dispatch","buffer","setBuffer","publicKey","setPublicKey","handleFileChange","e","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","Buffer","result","handleKeyChange","value","handleClick","sessionStorage","clear","navigate","handleSubmit","preventDefault","type","payload","key","encrypt","add","contract","methods","set","path","send","from","accounts","msg","success","error","message"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\nimport Ipfs from './Ipfs';\nimport NodeRSA from 'node-rsa';\nimport Context from '../store/Context';\n\nconst AddDocument = () => {\n  const {state, dispatch} = useContext(Context);\n\n  const [buffer, setBuffer] = useState();\n  const [publicKey, setPublicKey] = useState();\n\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => {\n      setBuffer(Buffer(reader.result));\n    }\n  }\n\n  const handleKeyChange = e => {\n    setPublicKey(e.target.value);\n  }\n\n  const handleClick=()=>{\n        sessionStorage.clear()\n        navigate('/')\n  }\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      dispatch({type: 'SET_LOADING', payload: true});\n      const key = new NodeRSA(publicKey);\n      const encrypt = key.encrypt(buffer);\n      for await (const result of Ipfs.add(encrypt)) {\n        await state.contract.methods\n          .set(result.path)\n          .send({from: state.accounts[0]});\n        dispatch({type: 'SET_PATH', payload: result.path});\n        dispatch({\n          type: 'SET_NOTIF',\n          payload: {msg: result.path, success: true}\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: 'SET_NOTIF',\n        payload: {msg: error.message, success: false}\n      });\n    } finally {\n      dispatch({type: 'SET_LOADING', payload: false});\n    }\n  }\n\n  return (\n    <>\n    <h2>ADD</h2>\n    <form onSubmit={handleSubmit}>\n      <label>File</label>\n      <input\n        className='u-full-width'\n        type='file'\n        onChange={handleFileChange}\n        required />\n      <label>Public Key</label>\n      <input\n        className='u-full-width'\n        type='text'\n        onChange={handleKeyChange}\n        required />\n      <button\n        className='u-full-width button-primary'\n        type='submit'>\n        submit\n      </button>\n    </form>\n    </>\n  )\n}\n\nexport default AddDocument;\n"]},"metadata":{},"sourceType":"module"}