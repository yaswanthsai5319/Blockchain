{"ast":null,"code":"'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\n\nconst CID = require('cids');\n\nconst toCamel = require('../lib/object-to-camel');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure((api, options) => {\n  const refs = async function* (args, options = {}) {\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n\n    const res = await api.post('refs', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: args.map(arg => `${Buffer.isBuffer(arg) ? new CID(arg) : arg}`),\n        ...options\n      }),\n      headers: options.headers,\n      transform: toCamel\n    });\n    yield* res.ndjson();\n  };\n\n  refs.local = require('./local')(options);\n  return refs;\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/refs/index.js"],"names":["Buffer","require","CID","toCamel","configure","toUrlSearchParams","module","exports","api","options","refs","args","Array","isArray","res","post","timeout","signal","searchParams","arg","map","isBuffer","headers","transform","ndjson","local"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,wBAAD,CAAvB;;AACA,MAAMG,SAAS,GAAGH,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAAD,CAAjC;;AAEAK,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,CAACI,GAAD,EAAMC,OAAN,KAAkB;AAC3C,QAAMC,IAAI,GAAG,iBAAkBC,IAAlB,EAAwBF,OAAO,GAAG,EAAlC,EAAsC;AACjD,QAAI,CAACG,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAL,EAA0B;AACxBA,MAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;AACD;;AAED,UAAMG,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAJ,CAAS,MAAT,EAAiB;AACjCC,MAAAA,OAAO,EAAEP,OAAO,CAACO,OADgB;AAEjCC,MAAAA,MAAM,EAAER,OAAO,CAACQ,MAFiB;AAGjCC,MAAAA,YAAY,EAAEb,iBAAiB,CAAC;AAC9Bc,QAAAA,GAAG,EAAER,IAAI,CAACS,GAAL,CAASD,GAAG,IAAK,GAAEnB,MAAM,CAACqB,QAAP,CAAgBF,GAAhB,IAAuB,IAAIjB,GAAJ,CAAQiB,GAAR,CAAvB,GAAsCA,GAAI,EAA7D,CADyB;AAE9B,WAAGV;AAF2B,OAAD,CAHE;AAOjCa,MAAAA,OAAO,EAAEb,OAAO,CAACa,OAPgB;AAQjCC,MAAAA,SAAS,EAAEpB;AARsB,KAAjB,CAAlB;AAWA,WAAQW,GAAG,CAACU,MAAJ,EAAR;AACD,GAjBD;;AAkBAd,EAAAA,IAAI,CAACe,KAAL,GAAaxB,OAAO,CAAC,SAAD,CAAP,CAAmBQ,OAAnB,CAAb;AAEA,SAAOC,IAAP;AACD,CAtByB,CAA1B","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst CID = require('cids')\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure((api, options) => {\n  const refs = async function * (args, options = {}) {\n    if (!Array.isArray(args)) {\n      args = [args]\n    }\n\n    const res = await api.post('refs', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: args.map(arg => `${Buffer.isBuffer(arg) ? new CID(arg) : arg}`),\n        ...options\n      }),\n      headers: options.headers,\n      transform: toCamel\n    })\n\n    yield * res.ndjson()\n  }\n  refs.local = require('./local')(options)\n\n  return refs\n})\n"]},"metadata":{},"sourceType":"script"}