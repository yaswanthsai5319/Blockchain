{"ast":null,"code":"'use strict';\n\nconst toCamel = require('./lib/object-to-camel');\n\nconst configure = require('./lib/configure');\n\nconst toUrlSearchParams = require('./lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async function* ping(peerId, options = {}) {\n    const res = await api.post('ping', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${peerId}`,\n        ...options\n      }),\n      headers: options.headers,\n      transform: toCamel\n    });\n    yield* res.ndjson();\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/ping.js"],"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","ping","peerId","options","res","post","timeout","signal","searchParams","arg","headers","transform","ndjson"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,uBAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,iBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,4BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC,SAAO,gBAAiBC,IAAjB,CAAuBC,MAAvB,EAA+BC,OAAO,GAAG,EAAzC,EAA6C;AAClD,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,MAAT,EAAiB;AACjCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADgB;AAEjCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFiB;AAGjCC,MAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,QAAAA,GAAG,EAAG,GAAEP,MAAO,EADe;AAE9B,WAAGC;AAF2B,OAAD,CAHE;AAOjCO,MAAAA,OAAO,EAAEP,OAAO,CAACO,OAPgB;AAQjCC,MAAAA,SAAS,EAAEjB;AARsB,KAAjB,CAAlB;AAWA,WAAQU,GAAG,CAACQ,MAAJ,EAAR;AACD,GAbD;AAcD,CAfyB,CAA1B","sourcesContent":["'use strict'\n\nconst toCamel = require('./lib/object-to-camel')\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async function * ping (peerId, options = {}) {\n    const res = await api.post('ping', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${peerId}`,\n        ...options\n      }),\n      headers: options.headers,\n      transform: toCamel\n    })\n\n    yield * res.ndjson()\n  }\n})\n"]},"metadata":{},"sourceType":"script"}