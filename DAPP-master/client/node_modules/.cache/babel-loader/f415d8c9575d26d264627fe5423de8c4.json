{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst multiaddr = require('multiaddr');\n\nconst toCamel = require('../lib/object-to-camel');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nconst multipartRequest = require('../lib/multipart-request');\n\nmodule.exports = configure(api => {\n  return async function* put(key, value, options = {}) {\n    const res = await api.post('dht/put', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      ...(await multipartRequest(value, options.headers))\n    });\n\n    for await (let message of res.ndjson()) {\n      message = toCamel(message);\n      message.id = new CID(message.id);\n\n      if (message.responses) {\n        message.responses = message.responses.map(({\n          ID,\n          Addrs\n        }) => ({\n          id: ID,\n          addrs: (Addrs || []).map(a => multiaddr(a))\n        }));\n      }\n\n      yield message;\n    }\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/dht/put.js"],"names":["CID","require","multiaddr","toCamel","configure","toUrlSearchParams","multipartRequest","module","exports","api","put","key","value","options","res","post","timeout","signal","searchParams","arg","headers","message","ndjson","id","responses","map","ID","Addrs","addrs","a"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,wBAAD,CAAvB;;AACA,MAAMG,SAAS,GAAGH,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAAD,CAAjC;;AACA,MAAMK,gBAAgB,GAAGL,OAAO,CAAC,0BAAD,CAAhC;;AAEAM,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC,SAAO,gBAAiBC,GAAjB,CAAsBC,GAAtB,EAA2BC,KAA3B,EAAkCC,OAAO,GAAG,EAA5C,EAAgD;AACrD,UAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,SAAT,EAAoB;AACpCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADmB;AAEpCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFoB;AAGpCC,MAAAA,YAAY,EAAEb,iBAAiB,CAAC;AAC9Bc,QAAAA,GAAG,EAAER,GADyB;AAE9B,WAAGE;AAF2B,OAAD,CAHK;AAOpC,UACE,MAAMP,gBAAgB,CAACM,KAAD,EAAQC,OAAO,CAACO,OAAhB,CADxB;AAPoC,KAApB,CAAlB;;AAYA,eAAW,IAAIC,OAAf,IAA0BP,GAAG,CAACQ,MAAJ,EAA1B,EAAwC;AACtCD,MAAAA,OAAO,GAAGlB,OAAO,CAACkB,OAAD,CAAjB;AACAA,MAAAA,OAAO,CAACE,EAAR,GAAa,IAAIvB,GAAJ,CAAQqB,OAAO,CAACE,EAAhB,CAAb;;AACA,UAAIF,OAAO,CAACG,SAAZ,EAAuB;AACrBH,QAAAA,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACG,SAAR,CAAkBC,GAAlB,CAAsB,CAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA;AAAN,SAAD,MAAoB;AAC5DJ,UAAAA,EAAE,EAAEG,EADwD;AAE5DE,UAAAA,KAAK,EAAE,CAACD,KAAK,IAAI,EAAV,EAAcF,GAAd,CAAkBI,CAAC,IAAI3B,SAAS,CAAC2B,CAAD,CAAhC;AAFqD,SAApB,CAAtB,CAApB;AAID;;AACD,YAAMR,OAAN;AACD;AACF,GAxBD;AAyBD,CA1ByB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst multiaddr = require('multiaddr')\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst multipartRequest = require('../lib/multipart-request')\n\nmodule.exports = configure(api => {\n  return async function * put (key, value, options = {}) {\n    const res = await api.post('dht/put', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      ...(\n        await multipartRequest(value, options.headers)\n      )\n    })\n\n    for await (let message of res.ndjson()) {\n      message = toCamel(message)\n      message.id = new CID(message.id)\n      if (message.responses) {\n        message.responses = message.responses.map(({ ID, Addrs }) => ({\n          id: ID,\n          addrs: (Addrs || []).map(a => multiaddr(a))\n        }))\n      }\n      yield message\n    }\n  }\n})\n"]},"metadata":{},"sourceType":"script"}