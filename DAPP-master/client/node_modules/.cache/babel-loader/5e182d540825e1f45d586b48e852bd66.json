{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\DAPP-master-dup\\\\DAPP-master\\\\client\\\\src\\\\components\\\\RegisterPage.js\";\n// import React, { useState } from 'react';\n// import Axios from 'axios';\n// import {useNavigate} from 'react-router-dom'\n// function RegisterPage() {\n//   const navigate=useNavigate();\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   function handleUsernameChange(event) {\n//     setUsername(event.target.value);\n//   }\n//   function handlePasswordChange(event) {\n//     setPassword(event.target.value);\n//   }\n//   function handleConfirmPasswordChange(event) {\n//     setConfirmPassword(event.target.value);\n//   }\n//   function handleSubmit(event) {\n//     event.preventDefault();\n//     // TODO: Handle registration logic with Username and password\n//       Axios.post('http://localhost:3001/register',{\n//         username:username,\n//         password:password,\n//         confirmPassword:confirmPassword\n//       })\n//       .then((res)=>{\n//         console.log(\"ress--\",res.data.code)\n//         // alert(\"Registered Successfully\");\n//         if (res.data!==\"\" & res){\n//           alert(\"Registration Successful\")\n//           navigate('/')\n//         }\n//         else{\n//           alert(\"Registration Unsuccessful\")\n//           navigate('/register')\n//         }\n//       })\n//       //  alert(JSON.stringify(event, null, 2));\n//       //  navigate('/login')\n//      }\n//   return (\n//     <div>\n//       <h1>Register</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Username:\n//           <input type=\"username\" id=\"username\" name=\"username\" value={username} onChange={handleUsernameChange} />\n//         </label>\n//         <label>\n//           Password:\n//           <input type=\"password\" value={password} id=\"password\" name=\"password\" onChange={handlePasswordChange} />\n//         </label>\n//         <label>\n//           Confirm Password:\n//           <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordChange} />\n//         </label>\n//         <button type=\"submit\">Register</button>\n//       </form>\n//     </div>\n//   );\n// }\n// export default RegisterPage;\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\n\nfunction RegisterPage() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  function handleUsernameChange(event) {\n    setUsername(event.target.value);\n  }\n\n  function handlePasswordChange(event) {\n    setPassword(event.target.value);\n  }\n\n  function handleConfirmPasswordChange(event) {\n    setConfirmPassword(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n\n    Axios.post('http://localhost:3001/register', {\n      username: username,\n      password: password\n    }).then(res => {\n      console.log(res);\n\n      if (res.data == username) {\n        alert('Registration Successful');\n        navigate('/');\n      } else {\n        alert(res);\n        navigate('/register');\n      }\n    }).catch(error => {\n      console.error(error);\n      alert('Registration Unsuccessful');\n      navigate('/register');\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Username:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    value: username,\n    onChange: handleUsernameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Password:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    id: \"password\",\n    name: \"password\",\n    onChange: handlePasswordChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"Confirm :\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    id: \"confirmPassword\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleConfirmPasswordChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Register\"))));\n}\n\nexport default RegisterPage;","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/DAPP-master-dup/DAPP-master/client/src/components/RegisterPage.js"],"names":["React","useState","Axios","useNavigate","RegisterPage","navigate","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","handleUsernameChange","event","target","value","handlePasswordChange","handleConfirmPasswordChange","handleSubmit","preventDefault","alert","post","then","res","console","log","data","catch","error"],"mappings":"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","sourcesContent":["// import React, { useState } from 'react';\r\n// import Axios from 'axios';\r\n// import {useNavigate} from 'react-router-dom'\r\n\r\n// function RegisterPage() {\r\n//   const navigate=useNavigate();\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n//   function handleUsernameChange(event) {\r\n//     setUsername(event.target.value);\r\n//   }\r\n\r\n//   function handlePasswordChange(event) {\r\n//     setPassword(event.target.value);\r\n//   }\r\n\r\n//   function handleConfirmPasswordChange(event) {\r\n//     setConfirmPassword(event.target.value);\r\n//   }\r\n\r\n//   function handleSubmit(event) {\r\n//     event.preventDefault();\r\n//     // TODO: Handle registration logic with Username and password\r\n//       Axios.post('http://localhost:3001/register',{\r\n//         username:username,\r\n//         password:password,\r\n//         confirmPassword:confirmPassword\r\n//       })\r\n      \r\n//       .then((res)=>{\r\n//         console.log(\"ress--\",res.data.code)\r\n//         // alert(\"Registered Successfully\");\r\n//         if (res.data!==\"\" & res){\r\n//           alert(\"Registration Successful\")\r\n//           navigate('/')\r\n//         }\r\n//         else{\r\n//           alert(\"Registration Unsuccessful\")\r\n//           navigate('/register')\r\n//         }\r\n//       })\r\n//       //  alert(JSON.stringify(event, null, 2));\r\n//       //  navigate('/login')\r\n//      }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Register</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Username:\r\n//           <input type=\"username\" id=\"username\" name=\"username\" value={username} onChange={handleUsernameChange} />\r\n//         </label>\r\n//         <label>\r\n//           Password:\r\n//           <input type=\"password\" value={password} id=\"password\" name=\"password\" onChange={handlePasswordChange} />\r\n//         </label>\r\n//         <label>\r\n//           Confirm Password:\r\n//           <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordChange} />\r\n//         </label>\r\n//         <button type=\"submit\">Register</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default RegisterPage;\r\nimport React, { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../App.css';\r\nfunction RegisterPage() {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  function handleUsernameChange(event) {\r\n    setUsername(event.target.value);\r\n  }\r\n\r\n  function handlePasswordChange(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  function handleConfirmPasswordChange(event) {\r\n    setConfirmPassword(event.target.value);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    Axios.post('http://localhost:3001/register', {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then(res => {\r\n      console.log(res);\r\n      if (res.data==username) {\r\n        alert('Registration Successful');\r\n        navigate('/');\r\n      } else {\r\n        alert(res);\r\n        navigate('/register');\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n      alert('Registration Unsuccessful');\r\n      navigate('/register');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n    <div className='form-container'>\r\n      <h1>Register</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Username:\r\n          <input type=\"text\" id=\"username\" name=\"username\" value={username} onChange={handleUsernameChange} />\r\n        </label>\r\n        <label>\r\n          Password:\r\n          <input type=\"password\" value={password} id=\"password\" name=\"password\" onChange={handlePasswordChange} />\r\n        </label>\r\n        <label>\r\n          Confirm :\r\n          <input type=\"password\" className='form-control' id=\"confirmPassword\" name=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordChange} />\r\n        </label>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n"]},"metadata":{},"sourceType":"module"}