{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async (topic, options = {}) => {\n    if (!options && typeof topic === 'object') {\n      options = topic || {};\n      topic = null;\n    }\n\n    const res = await api.post('pubsub/peers', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: topic,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {\n      Strings\n    } = await res.json();\n    return Strings || [];\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/pubsub/peers.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","topic","options","res","post","timeout","signal","searchParams","arg","headers","Strings","json"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC,SAAO,OAAOC,KAAP,EAAcC,OAAO,GAAG,EAAxB,KAA+B;AACpC,QAAI,CAACA,OAAD,IAAY,OAAOD,KAAP,KAAiB,QAAjC,EAA2C;AACzCC,MAAAA,OAAO,GAAGD,KAAK,IAAI,EAAnB;AACAA,MAAAA,KAAK,GAAG,IAAR;AACD;;AAED,UAAME,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,cAAT,EAAyB;AACzCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADwB;AAEzCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFyB;AAGzCC,MAAAA,YAAY,EAAEV,iBAAiB,CAAC;AAC9BW,QAAAA,GAAG,EAAEP,KADyB;AAE9B,WAAGC;AAF2B,OAAD,CAHU;AAOzCO,MAAAA,OAAO,EAAEP,OAAO,CAACO;AAPwB,KAAzB,CAAlB;AAUA,UAAM;AAAEC,MAAAA;AAAF,QAAc,MAAMP,GAAG,CAACQ,IAAJ,EAA1B;AAEA,WAAOD,OAAO,IAAI,EAAlB;AACD,GAnBD;AAoBD,CArByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (topic, options = {}) => {\n    if (!options && typeof topic === 'object') {\n      options = topic || {}\n      topic = null\n    }\n\n    const res = await api.post('pubsub/peers', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: topic,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n})\n"]},"metadata":{},"sourceType":"script"}