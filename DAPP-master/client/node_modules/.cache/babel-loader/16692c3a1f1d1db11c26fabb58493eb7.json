{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\DAPP-master-dup\\\\DAPP-master\\\\client\\\\src\\\\App.js\";\nimport React, { useReducer, useState, useEffect } from 'react';\nimport Context from './store/Context.js';\nimport InitialeState from './store/InitialeState.js';\nimport Reducer from './store/Reducer.js';\nimport ipfs from './components/Ipfs.js';\nimport AddDocument from './components/AddDocument.js';\nimport GenerateKeyPair from './components/GenerateKeyPair.js';\nimport GetDocument from './components/GetDocument.js';\nimport Notif from './components/Notif.js';\nimport SimpleStorage from './contracts/SimpleStorage.json';\nimport GetWeb3 from './utils/GetWeb3.js';\nimport { useNavigate } from 'react-router-dom'; // import { navigate } from '@reach/router';\n\nimport Axios from 'axios';\nimport './App.css';\nimport Web3 from 'web3';\n\nfunction App() {\n  // use the reducer hook\n  const navigate = useNavigate();\n  const [state, dispatch] = useReducer(Reducer, InitialeState);\n  const [data, setData] = useState(\"\");\n  useEffect(() => {\n    async function connectToGanacheAccount() {\n      // Check if the browser has MetaMask installed\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n\n        try {\n          // Request access to MetaMask accounts\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          }); // Connect to the local Ganache blockchain\n\n          const networkId = await web3.eth.net.getId();\n\n          if (networkId !== 1337) {\n            console.error('Please connect MetaMask to your local Ganache blockchain.');\n            return;\n          } // Get the first account from Ganache\n\n\n          const accounts = await web3.eth.getAccounts();\n          const firstAccount = accounts[0];\n          console.log('Connected to the first account in Ganache:', firstAccount);\n        } catch (error) {\n          console.error('Error connecting to MetaMask:', error);\n        }\n      } else {\n        console.error('MetaMask not installed. Please install MetaMask to use this feature.');\n      }\n    }\n\n    connectToGanacheAccount();\n\n    if (sessionStorage.length == 0) {\n      navigate('/');\n    }\n\n    const init = async () => {\n      // get web3 instance\n      const web3 = await GetWeb3(); // get accounts      \n\n      const accounts = await web3.eth.getAccounts(); // get the contract instance from the blockchain\n\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorage.networks[networkId];\n      const contract = new web3.eth.Contract(SimpleStorage.abi, deployedNetwork && deployedNetwork.address); // set the web3 instance to a global variable\n\n      dispatch({\n        type: 'SET_WEB3',\n        payload: web3\n      }); // set accounts to a global variable\n\n      dispatch({\n        type: 'SET_ACCOUNTS',\n        payload: accounts\n      }); // set the contract instance to a global variable\n\n      dispatch({\n        type: 'SET_CONTRACT',\n        payload: contract\n      });\n    }; // launch the init function\n\n\n    init(); // if the account of metamask change, the accounts will be updated\n\n    window.ethereum.on('accountsChanged', accounts => {\n      dispatch({\n        type: 'SET_CONTRACT',\n        payload: accounts\n      });\n    });\n  }, []);\n\n  const handleClick = () => {\n    sessionStorage.clear();\n    navigate('/');\n  };\n\n  const getAll = () => {\n    Axios.get('http://localhost:3001/get', {\n      params: {\n        username: sessionStorage.getItem('username')\n      }\n    }).then(response => {\n      if (response.data !== []) {\n        setData(response.data);\n      }\n    });\n  }; // the app will be started if the state is not null\n\n\n  if (state && !state.loading) {\n    return (\n      /*#__PURE__*/\n      // Provide state and dispatch function to the components of the app\n      React.createElement(Context.Provider, {\n        value: {\n          state,\n          dispatch\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 14\n        }\n      }), state.msg && /*#__PURE__*/React.createElement(Notif, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"components-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(AddDocument, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(GetDocument, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(GenerateKeyPair, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"logout-btn\",\n        onClick: handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, \"Logout\"), data !== \"\" && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, \"Path\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, \"Private Key\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, \"Extension\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }\n      }, data.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, item.path), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, item.key), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, item.extension)))))), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"get-data-button\",\n        onClick: getAll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }, \"Received Data\"))\n    );\n  } else {\n    // if the state in null, the app shows loading message\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    }, \"Loading...\"));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DAPP-master-dup/DAPP-master/client/src/App.js"],"names":["React","useReducer","useState","useEffect","Context","InitialeState","Reducer","ipfs","AddDocument","GenerateKeyPair","GetDocument","Notif","SimpleStorage","GetWeb3","useNavigate","Axios","Web3","App","navigate","state","dispatch","data","setData","connectToGanacheAccount","window","ethereum","web3","request","method","networkId","eth","net","getId","console","error","accounts","getAccounts","firstAccount","log","sessionStorage","length","init","deployedNetwork","networks","contract","Contract","abi","address","type","payload","on","handleClick","clear","getAll","get","params","username","getItem","then","response","loading","msg","map","item","index","path","key","extension"],"mappings":"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","sourcesContent":["import React, {useReducer,useState, useEffect} from 'react';\nimport Context from './store/Context.js';\nimport InitialeState from './store/InitialeState.js';\nimport Reducer from './store/Reducer.js';\nimport ipfs from './components/Ipfs.js';\nimport AddDocument from './components/AddDocument.js';\nimport GenerateKeyPair from './components/GenerateKeyPair.js';\nimport GetDocument from './components/GetDocument.js';\nimport Notif from './components/Notif.js';\nimport SimpleStorage from './contracts/SimpleStorage.json';\nimport GetWeb3 from './utils/GetWeb3.js';\nimport { useNavigate } from 'react-router-dom';\n// import { navigate } from '@reach/router';\nimport Axios from 'axios';\nimport './App.css'\nimport Web3 from 'web3';\n\n\n\n\nfunction App() {\n  // use the reducer hook\n  const navigate = useNavigate();\n  const [state, dispatch] = useReducer(Reducer, InitialeState);\n  const [data,setData] =useState(\"\")\n  useEffect(() => {\n\n    async function connectToGanacheAccount() {\n      // Check if the browser has MetaMask installed\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n\n        try {\n          // Request access to MetaMask accounts\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n\n          // Connect to the local Ganache blockchain\n          const networkId = await web3.eth.net.getId();\n          if (networkId !== 1337) {\n            console.error('Please connect MetaMask to your local Ganache blockchain.');\n            return;\n          }\n\n          // Get the first account from Ganache\n          const accounts = await web3.eth.getAccounts();\n          const firstAccount = accounts[0];\n\n          console.log('Connected to the first account in Ganache:', firstAccount);\n        } catch (error) {\n          console.error('Error connecting to MetaMask:', error);\n        }\n      } else {\n        console.error('MetaMask not installed. Please install MetaMask to use this feature.');\n      }\n    }\n\n    connectToGanacheAccount()\n\n    if(sessionStorage.length==0)\n        {\n            navigate('/')\n        }\n\n    const init = async () => {\n      // get web3 instance\n      const web3 = await GetWeb3();\n      \n      // get accounts      \n      const accounts = await web3.eth.getAccounts();\n\n      // get the contract instance from the blockchain\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorage.networks[networkId];      \n      const contract = new web3.eth.Contract(\n        SimpleStorage.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n      \n      // set the web3 instance to a global variable\n      dispatch({type: 'SET_WEB3', payload: web3});\n\n      // set accounts to a global variable\n      dispatch({type: 'SET_ACCOUNTS', payload: accounts});\n      \n      // set the contract instance to a global variable\n      dispatch({type: 'SET_CONTRACT', payload: contract});\n    }\n\n    // launch the init function\n    init();\n\n    // if the account of metamask change, the accounts will be updated\n    window.ethereum.on('accountsChanged', accounts => {\n      dispatch({type: 'SET_CONTRACT', payload: accounts});\n    });\n  }, []);\n\n  const handleClick=()=>{\n        sessionStorage.clear()\n        navigate('/')\n  }\n\n  const getAll = () => {\n  Axios.get('http://localhost:3001/get', {\n    params: {\n      username: sessionStorage.getItem('username')\n    }\n  }).then((response) => {\n    if (response.data!==[]) {\n      setData(response.data);\n    }\n  });\n};\n\n  // the app will be started if the state is not null\n  if(state && !state.loading) {\n    return (\n      // Provide state and dispatch function to the components of the app\n      <Context.Provider value={{state, dispatch}}>\n        <br/><br/>\n         \n        {state.msg && <Notif />}\n\n         <div className=\"components-container\">\n        <AddDocument />\n        <GetDocument />\n        </div>\n        <hr/>\n\n         \n        <GenerateKeyPair/>\n        <button type='submit' className='logout-btn' onClick={handleClick}>Logout</button>\n        {data !== \"\" && (\n        <div>\n          <table>\n            <thead>\n              <tr>\n                <th>Path</th>\n                <th>Private Key</th>\n                <th>Extension</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((item, index) => (\n          <tr key={index}>\n            <td>{item.path}</td>\n            <td>{item.key}</td>\n            <td>{item.extension}</td>\n          </tr>\n        ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n        <button type='submit' className=\"get-data-button\" onClick={getAll}>Received Data</button>\n\n      </Context.Provider>\n      \n    );\n  } else {\n    // if the state in null, the app shows loading message\n    return (\n      <>\n      <br/><br/>\n      <h2>Loading...</h2>\n      </>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}