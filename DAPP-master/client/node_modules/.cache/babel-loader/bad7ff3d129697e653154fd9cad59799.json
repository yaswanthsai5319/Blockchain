{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required');\n    }\n\n    const res = await api.post('config', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Value;\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/config/get.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","key","options","Error","res","post","timeout","signal","searchParams","arg","headers","data","json","Value"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC,SAAO,OAAOC,GAAP,EAAYC,OAAO,GAAG,EAAtB,KAA6B;AAClC,QAAI,CAACD,GAAL,EAAU;AACR,YAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmB;AACnCC,MAAAA,OAAO,EAAEJ,OAAO,CAACI,OADkB;AAEnCC,MAAAA,MAAM,EAAEL,OAAO,CAACK,MAFmB;AAGnCC,MAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,QAAAA,GAAG,EAAER,GADyB;AAE9B,WAAGC;AAF2B,OAAD,CAHI;AAOnCQ,MAAAA,OAAO,EAAER,OAAO,CAACQ;AAPkB,KAAnB,CAAlB;AASA,UAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AAEA,WAAOD,IAAI,CAACE,KAAZ;AACD,GAjBD;AAkBD,CAnByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required')\n    }\n\n    const res = await api.post('config', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Value\n  }\n})\n"]},"metadata":{},"sourceType":"script"}