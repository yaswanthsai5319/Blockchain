{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\DAPP-master-dup\\\\DAPP-master\\\\client\\\\src\\\\components\\\\RegisterPage.js\";\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nfunction RegisterPage() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  function handleUsernameChange(event) {\n    setUsername(event.target.value);\n  }\n\n  function handlePasswordChange(event) {\n    setPassword(event.target.value);\n  }\n\n  function handleConfirmPasswordChange(event) {\n    setConfirmPassword(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // TODO: Handle registration logic with Username and password\n\n    Axios.post('http://localhost:3001/register', {\n      username: username,\n      password: password,\n      confirmPassword: confirmPassword\n    }).then(res => {\n      console.log(res.data.code); // alert(\"Registered Successfully\");\n\n      if (res.data !== \"\") {\n        alert(\"Registration Successful\");\n        navigate('/');\n      } else {\n        alert(\"Registration Unsuccessful\");\n        navigate('/register');\n      }\n    }); //  alert(JSON.stringify(event, null, 2));\n    //  navigate('/login')\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Username:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"username\",\n    id: \"username\",\n    name: \"username\",\n    value: username,\n    onChange: handleUsernameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Password:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    id: \"password\",\n    name: \"password\",\n    onChange: handlePasswordChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Confirm Password:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleConfirmPasswordChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n}\n\nexport default RegisterPage;","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/DAPP-master-dup/DAPP-master/client/src/components/RegisterPage.js"],"names":["React","useState","Axios","useNavigate","RegisterPage","navigate","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","handleUsernameChange","event","target","value","handlePasswordChange","handleConfirmPasswordChange","handleSubmit","preventDefault","post","then","res","console","log","data","code","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nfunction RegisterPage() {\r\n  const navigate=useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  function handleUsernameChange(event) {\r\n    setUsername(event.target.value);\r\n  }\r\n\r\n  function handlePasswordChange(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  function handleConfirmPasswordChange(event) {\r\n    setConfirmPassword(event.target.value);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    // TODO: Handle registration logic with Username and password\r\n      Axios.post('http://localhost:3001/register',{\r\n        username:username,\r\n        password:password,\r\n        confirmPassword:confirmPassword\r\n      })\r\n      \r\n      .then((res)=>{\r\n        console.log(res.data.code)\r\n        // alert(\"Registered Successfully\");\r\n        if (res.data!==\"\"){\r\n          alert(\"Registration Successful\")\r\n          navigate('/')\r\n        }\r\n        else{\r\n          alert(\"Registration Unsuccessful\")\r\n          navigate('/register')\r\n        }\r\n      })\r\n      //  alert(JSON.stringify(event, null, 2));\r\n      //  navigate('/login')\r\n     }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Register</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Username:\r\n          <input type=\"username\" id=\"username\" name=\"username\" value={username} onChange={handleUsernameChange} />\r\n        </label>\r\n        <label>\r\n          Password:\r\n          <input type=\"password\" value={password} id=\"password\" name=\"password\" onChange={handlePasswordChange} />\r\n        </label>\r\n        <label>\r\n          Confirm Password:\r\n          <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordChange} />\r\n        </label>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n"]},"metadata":{},"sourceType":"module"}