{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async (cid, options = {}) => {\n    const res = await api.post('block/stat', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: new CID(cid).toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      cid: new CID(data.Key),\n      size: data.Size\n    };\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/block/stat.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","cid","options","res","post","timeout","signal","searchParams","arg","toString","headers","data","json","Key","size","Size"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC,SAAO,OAAOC,GAAP,EAAYC,OAAO,GAAG,EAAtB,KAA6B;AAClC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,YAAT,EAAuB;AACvCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADsB;AAEvCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFuB;AAGvCC,MAAAA,YAAY,EAAEV,iBAAiB,CAAC;AAC9BW,QAAAA,GAAG,EAAE,IAAId,GAAJ,CAAQO,GAAR,EAAaQ,QAAb,EADyB;AAE9B,WAAGP;AAF2B,OAAD,CAHQ;AAOvCQ,MAAAA,OAAO,EAAER,OAAO,CAACQ;AAPsB,KAAvB,CAAlB;AASA,UAAMC,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAJ,EAAnB;AAEA,WAAO;AAAEX,MAAAA,GAAG,EAAE,IAAIP,GAAJ,CAAQiB,IAAI,CAACE,GAAb,CAAP;AAA0BC,MAAAA,IAAI,EAAEH,IAAI,CAACI;AAArC,KAAP;AACD,GAbD;AAcD,CAfyB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (cid, options = {}) => {\n    const res = await api.post('block/stat', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: new CID(cid).toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return { cid: new CID(data.Key), size: data.Size }\n  }\n})\n"]},"metadata":{},"sourceType":"script"}