{"ast":null,"code":"'use strict';\n\nconst toCamel = require('../lib/object-to-camel');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async (oldName, newName, options = {}) => {\n    const res = await api.post('key/rename', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [oldName, newName],\n        ...options\n      }),\n      headers: options.headers\n    });\n    return toCamel(await res.json());\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/key/rename.js"],"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","oldName","newName","options","res","post","timeout","signal","searchParams","arg","headers","json"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,wBAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC,SAAO,OAAOC,OAAP,EAAgBC,OAAhB,EAAyBC,OAAO,GAAG,EAAnC,KAA0C;AAC/C,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,YAAT,EAAuB;AACvCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADsB;AAEvCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFuB;AAGvCC,MAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,QAAAA,GAAG,EAAE,CACHR,OADG,EAEHC,OAFG,CADyB;AAK9B,WAAGC;AAL2B,OAAD,CAHQ;AAUvCO,MAAAA,OAAO,EAAEP,OAAO,CAACO;AAVsB,KAAvB,CAAlB;AAaA,WAAOhB,OAAO,CAAC,MAAMU,GAAG,CAACO,IAAJ,EAAP,CAAd;AACD,GAfD;AAgBD,CAjByB,CAA1B","sourcesContent":["'use strict'\n\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (oldName, newName, options = {}) => {\n    const res = await api.post('key/rename', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          oldName,\n          newName\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return toCamel(await res.json())\n  }\n})\n"]},"metadata":{},"sourceType":"script"}