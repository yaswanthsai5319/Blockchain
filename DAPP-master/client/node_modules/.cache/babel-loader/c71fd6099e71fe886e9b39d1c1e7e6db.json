{"ast":null,"code":"'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async (cid, options = {}) => {\n    const res = await api.post('object/stat', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${Buffer.isBuffer(cid) ? new CID(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    return res.json();\n  };\n});","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/DAPP-master-dup/DAPP-master/client/node_modules/ipfs-http-client/src/object/stat.js"],"names":["Buffer","require","CID","configure","toUrlSearchParams","module","exports","api","cid","options","res","post","timeout","signal","searchParams","arg","isBuffer","headers","json"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;;AAEAI,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC,SAAO,OAAOC,GAAP,EAAYC,OAAO,GAAG,EAAtB,KAA6B;AAClC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,aAAT,EAAwB;AACxCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADuB;AAExCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFwB;AAGxCC,MAAAA,YAAY,EAAEV,iBAAiB,CAAC;AAC9BW,QAAAA,GAAG,EAAG,GAAEf,MAAM,CAACgB,QAAP,CAAgBR,GAAhB,IAAuB,IAAIN,GAAJ,CAAQM,GAAR,CAAvB,GAAsCA,GAAI,EADpB;AAE9B,WAAGC;AAF2B,OAAD,CAHS;AAOxCQ,MAAAA,OAAO,EAAER,OAAO,CAACQ;AAPuB,KAAxB,CAAlB;AAUA,WAAOP,GAAG,CAACQ,IAAJ,EAAP;AACD,GAZD;AAaD,CAdyB,CAA1B","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (cid, options = {}) => {\n    const res = await api.post('object/stat', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${Buffer.isBuffer(cid) ? new CID(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n})\n"]},"metadata":{},"sourceType":"script"}